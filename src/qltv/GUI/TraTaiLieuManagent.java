/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package qltv.GUI;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import qltv.DAL.PhieuMuonModify;
import qltv.DTO.PhieuMuonTra;
import qltv.DTO.TraTL;
/**
 *
 * @author Lenovo L340
 */
public class TraTaiLieuManagent extends javax.swing.JPanel {

    DefaultTableModel tableModel;
    /**
     * Creates new form TraTaiLieuManagent
     */
    public TraTaiLieuManagent() {
        initComponents();
        tableModel = (DefaultTableModel) tblTratl.getModel();
        showPhieuMuon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnTraTL = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTratl = new javax.swing.JTable();
        txtngatra = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        txtmamuontra = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtdatra = new javax.swing.JTextField();
        txtghichu = new javax.swing.JTextField();

        btnTraTL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/qltv/icon_java/Actions-document-edit-icon-16.png"))); // NOI18N
        btnTraTL.setText("Trả Tài Liệu");
        btnTraTL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraTLActionPerformed(evt);
            }
        });

        jLabel1.setText("Ngày trả");

        tblTratl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã phiếu", "Mã thẻ", "Mã tài liệu", "Ngày mượn", "Ngày trả", "Đã trả", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTratl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTratlMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblTratl);

        txtngatra.setText("2021/04/01");
        txtngatra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtngatraFocusLost(evt);
            }
        });
        txtngatra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtngatraActionPerformed(evt);
            }
        });

        jLabel2.setText("Ghi chú");

        jLabel3.setText("Đã trả");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 51, 102));
        jLabel9.setText("Trả tài liệu");

        jToolBar1.setRollover(true);

        txtmamuontra.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtmamuontraFocusLost(evt);
            }
        });

        jLabel8.setText("Mã mượn trả");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel9)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 976, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59)
                                .addComponent(txtghichu))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtmamuontra)
                                    .addComponent(txtngatra)
                                    .addComponent(txtdatra))))
                        .addGap(56, 56, 56)
                        .addComponent(btnTraTL, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtmamuontra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtngatra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTraTL, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtdatra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtghichu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    
     private void showPhieuMuon(){
        List<PhieuMuonTra> TheMuonList = PhieuMuonModify.finAll();
        
        tableModel.setRowCount(0);
        TheMuonList.forEach((themuon) -> {
            tableModel.addRow(new Object[]{themuon.getMaMuonTra(),
                themuon.getMaThe(),themuon.getMaTL(),themuon.getNgayMuon(),themuon.getNgayTra(),themuon.getDaTra(),themuon.getGhiChu()});
        });
    }
    
     public void resetData(){
        txtmamuontra.setText("");
        txtngatra.setText("");
        txtdatra.setText("");
        txtghichu.setText("");
        
    }
    
    private void btnTraTLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraTLActionPerformed

        try {
            String maMuonTra = txtmamuontra.getText();
            String ngayTra = txtngatra.getText();
            int daTra = Integer.parseInt(txtdatra.getText());
            String ghiChu = txtghichu.getText();
            TraTL tm = new TraTL(maMuonTra, ngayTra, daTra, ghiChu);
 
                PhieuMuonModify.TraTL(tm);
                JOptionPane.showMessageDialog(this, "Bạn đã trả sách thành công.");
                showPhieuMuon();
                resetData();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,"Error" +  e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnTraTLActionPerformed

    private void tblTratlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTratlMouseClicked

            int index=tblTratl.getSelectedRow();
            txtmamuontra.setText((String)(tableModel.getValueAt(index, 0)));
            txtngatra.setText((String)tableModel.getValueAt(index, 4));
            txtdatra.setText((String)(tableModel.getValueAt(index, 5).toString()));
            txtghichu.setText((String)tableModel.getValueAt(index, 6));

    }//GEN-LAST:event_tblTratlMouseClicked

    private void txtngatraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtngatraFocusLost
       if (this.isVisible()){
            String ma = txtngatra.getText();
            }else{
                JOptionPane.showMessageDialog(this, "Ngày trả không được để trống!");
                txtmamuontra.requestFocus();
            }
    }//GEN-LAST:event_txtngatraFocusLost

    private void txtngatraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtngatraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtngatraActionPerformed

    private void txtmamuontraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtmamuontraFocusLost
        // TODO add your handling code here:
        if (this.isVisible()){
            String ma = txtmamuontra.getText();
            String reg = "^\\w{2}\\d{3}$";
            if(ma.length() > 0){
                if(!ma.matches(reg)){
                    JOptionPane.showMessageDialog(this, "Sai định dạng, nhập lại mã thẻ, ví dụ : MM000 !");
                    txtmamuontra.requestFocus();
                    resetData();
                }else {

                }
            }else{
                JOptionPane.showMessageDialog(this, "Mã thẻ mượn không được để trống!");
                txtmamuontra.requestFocus();
            }
        }
    }//GEN-LAST:event_txtmamuontraFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTraTL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTable tblTratl;
    private javax.swing.JTextField txtdatra;
    private javax.swing.JTextField txtghichu;
    private javax.swing.JTextField txtmamuontra;
    private javax.swing.JTextField txtngatra;
    // End of variables declaration//GEN-END:variables
}
